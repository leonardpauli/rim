# todo
' LeonardPauli/layer-renamer, sketch plugin
	Created by Leonard Pauli, 6 jun 2018

' expression notes
	// all: "<*>*" // nah
	// selected: ""
	// inside selected: ">*"
	:(fill=red) => :(fill.0=red.threshold(10%))
	hello (.*)! => :/hello (.*)!/rig // (initially using default flags) r-egex (otherwise plain text match), i-gnoreCase, g-lobal
	:: => : // escape colon separator
	:>0>2n+1 // path
	hello (.*)!:>0:/bg/:(fill=red, hidden=false):+1
	then, in replace; $1 = \(.0.1) = first group in first search regex
		\(.1.0) would be the resulting node from ":>0"
		\(.3) would be list of the ones matching filter/query
		\(.4) would be list of the ones resulting from ":+1"
		eg. \(.3.0.border.0.fill) or \(.4.0.title)
		eg. \(.path(">0").0.title)


- create nodesFindUsingPathExpression.js // in utils/
	taking parentGet, childrenGet, titleGet?, initial regex default flags, (expression evaluator propertiesGet)?
- create nodesFindUsingPathExpression.test.js
	test for simple path
	test for simple text
	test for simple text + simple path
	test for simple text + simple path + simple text + ...
	test for regex
	test for simple expression
- fix layer/query
	- create layer wrapper?
		- test with sketch
	- create layer wrapper mock for testing
	- test query using layer wrapper mock
	- test nodesFindUsingPathExpression with query with layer wrapper mock
	- test query with sketch
	- test nodesFindUsingPathExpression with query with sketch
	search functionallity pretty much done, on to UI!


- update
	// - change structure of prev LayerRenamer + merge in
	// - add as submodule to lpdocs
	// - arrayDeltaActions
		// - create
		// - test
	- nodesFindUsingPathExpression
		// - relativePath // -> findLayersUsingRelativePath
			// - refactor
			// - test js
				// - parseRelativePathStrPart
				// - nodesAtRelativePath
		- string/regex
			- simple test
		- filter MVP
			- simple test
		- combined path expression
			- keep part results // eg. regex groups / (path traversal, filter) resulting nodes
			- simple test
		- test sketch integration
			- layersFindUsingPathExpression
			- simple layer wrapper..?

	- select
		- create layerQuery
			- layersLookupTable<id: layerRef>
			- layerQuery
				in
					- layersLookupTable (mutable)
					- queries<layerId: query>; query:
						// count + id always included, though count always 1 if id given
						nonNestedFields: title<Bool>, locked<Bool>, visible<Bool>, kind<Bool>
						- fields:
							- ...nonNestedFields
							- children<{recursiveDepth: 1, ?query} or Empty>
				out: layers (as flattened json array, nested children is id array), other types (eg. symbols, styles, etc)
			- test
		- create layerUpdateDelta
			- layerId
			- fieldKey
			- action
				- set
				- move
				- insert (( after/before/at )( (item/id)/(index/last/first) ))
					- alias: replace: insert at ...
					- alias: prepend: insert before first
					- alias: append: insert after last
				- remove ( it / (item/id) / index )
			- value
		- create layerUpdate {id, ...fields to update with new values}
			diffs + invokes layerUpdateDelta
		- refactor code to separate obj calls / objs + js logic
		- simple
		- ignore case
		- regex
		- globalMatch
		- expression
			- simple
			- error check
			- type
			- flags
		- path
		- scope
			// - all
			- selectedAndInside
			- onlySelected
			- insideSelected
		- commit WIP
	- rename
		' if rename is enabled, it won't change the selection
		- simple
		- capture groups
		- flags
		- 
	- test persistant storage
	- test webview com
	- git tag 1.3, change appcast.xml + readme download link to point to github release
	- extract/refactor functions
		// - outline
		- select
		- rename
	- get working (inc shortcut), commit + publish minor
	- fix %N issue, commit + publish patch
	- explore adding webview as interface, commmit + publish minor
	- show props values, commit + publish minor
	- show found layers before and after, commit + publish minor
		write match regex -> each group gets color buble
	- answer github messages, update readme, post in sketch forum
