# todo
' LeonardPauli/rim
	Created by Leonard Pauli, 13 jul 2018

- copy in to syntax-experiments + update study/syntax, from:
	- rim-parser-old-schedule/algorithm-notes
	- rim-parser/notes

# utils
// partly from LeonardPauli/LayerRenamer

' expression notes
	// all: "<*>*" // nah
	// selected: ""
	// inside selected: ">*"
	:(fill=red) => :(fill.0=red.threshold(10%))
	hello (.*)! => :/hello (.*)!/rig // (initially using default flags) r-egex (otherwise plain text match), i-gnoreCase, g-lobal
	:: => : // escape colon separator
	:>0>2n+1 // path
	hello (.*)!:>0:/bg/:(fill=red, hidden=false):+1
	then, in replace; $1 = \(.0.1) = first group in first search regex
		\(.1.0) would be the resulting node from ":>0"
		\(.3) would be list of the ones matching filter/query
		\(.4) would be list of the ones resulting from ":+1"
		eg. \(.3.0.border.0.fill) or \(.4.0.title)
		eg. \(.path(">0").0.title)


- create nodesFindUsingPathExpression.js // in utils/
	taking parentGet, childrenGet, titleGet?, initial regex default flags, (expression evaluator propertiesGet)?
- create nodesFindUsingPathExpression.test.js
	test for simple path
	test for simple text
	test for simple text + simple path
	test for simple text + simple path + simple text + ...
	test for regex
	test for simple expression

- update
	// - arrayDeltaActions
		// - create
		// - test
	- nodesFindUsingPathExpression
		// - relativePath // -> findLayersUsingRelativePath
			// - refactor
			// - test js
				// - parseRelativePathStrPart
				// - nodesAtRelativePath
		- string/regex
			- simple test
		- filter MVP
			- simple test
		- combined path expression
			- keep part results // eg. regex groups / (path traversal, filter) resulting nodes
			- simple test
